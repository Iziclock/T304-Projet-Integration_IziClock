basePath: /
definitions:
  models.Calendar:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      name:
        type: string
      url:
        type: string
      userID:
        type: integer
    type: object
  models.Ringtone:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Il s'agit de la documentation de l'API IziClock.
  title: IziClock API Documentation
  version: "1.0"
paths:
  /alarms/state/{id}:
    put:
      responses: {}
  /calendar:
    get:
      consumes:
      - application/json
      description: Récupère une liste des événements à venir depuis le calendrier
        Google de l'utilisateur.
      parameters:
      - description: Code d'autorisation pour l'API Google
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Liste des événements
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Requête incorrecte
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne du serveur
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupère les événements du calendrier
      tags:
      - Calendrier
  /calendars:
    get:
      description: Récupère une liste de toutes les alarmes depuis la DB
      produces:
      - application/json
      responses:
        "200":
          description: Calendars send successfully
          schema:
            items:
              $ref: '#/definitions/models.Calendar'
            type: array
        "500":
          description: Internal Server Error
      summary: Récupère tous les calendriers
      tags:
      - Calendriers
  /calendars/{id}:
    delete:
      description: Efface un calendrier via son ID
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Calendar deleted successfully
          schema:
            type: string
        "404":
          description: Calendar not found
        "500":
          description: Internal Server Error
      summary: Efface un calendrier
      tags:
      - Calendriers
  /calendars/state/{id}:
    put:
      description: Change l'attribut d'activité d'un calendrier via l'identifiant
        de celui-ci
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Calendar updated successfully
          schema:
            $ref: '#/definitions/models.Calendar'
        "404":
          description: Calendar not found
        "500":
          description: Internal Server Error
      summary: Change l'attribut d'activité d'un calendrier
      tags:
      - Calendriers
  /loginCalendar:
    get:
      consumes:
      - application/json
      description: Fournit un lien permettant à l'utilisateur de se connecter et d'autoriser
        l'accès en lecture seule à son calendrier Google.
      produces:
      - text/plain
      responses:
        "200":
          description: URL d'autorisation Google pour l'utilisateur
          schema:
            type: string
        "500":
          description: Erreur interne du serveur
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Génère un lien d'autorisation Google
      tags:
      - Authentification
  /ping:
    get:
      description: Renvoie un message 'pong' pour vérifier que le serveur est en ligne
      produces:
      - application/json
      responses:
        "200":
          description: Ping Pong
      summary: Envoie un ping
      tags:
      - Ping
  /ringtones:
    get:
      description: Récupère une liste de toutes les sonneries depuis la DB
      produces:
      - application/json
      responses:
        "200":
          description: Ringtones send successfully
          schema:
            items:
              $ref: '#/definitions/models.Ringtone'
            type: array
        "500":
          description: Internal Server Error
      summary: Récupère toutes les sonneries
      tags:
      - Sonneries
  /ringtones/name/{id}:
    put:
      description: Modifie le nom d'une sonnerie en DB à partir de son ID
      parameters:
      - description: Ringtone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ringtone updated successfully
          schema:
            $ref: '#/definitions/models.Ringtone'
        "404":
          description: Ringtone not found
        "500":
          description: Internal Server Error
      summary: Modifie le nom d'une sonnerie
      tags:
      - Sonneries
  /ringtones/upload:
    post:
      description: Upload une nouvelle sonnerie et sauve son url dans la base de données
      parameters:
      - description: Fichier audio de la sonnerie à upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded and transferred successfully
        "400":
          description: No file is received
        "409":
          description: Ringtone already exists
        "500":
          description: Unable to save the file
      summary: Upload une sonnerie
      tags:
      - Sonneries
swagger: "2.0"
